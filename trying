{
  "nbformat": 4,
  "nbformat_minor": 0,
  "metadata": {
    "colab": {
      "name": "Colab-Rasa NLU Tutorials.ipynb",
      "version": "0.3.2",
      "provenance": [],
      "toc_visible": true,
      "include_colab_link": true
    },
    "kernelspec": {
      "name": "python3",
      "display_name": "Python 3"
    },
    "accelerator": "GPU"
  },
  "cells": [
    {
      "cell_type": "markdown",
      "metadata": {
        "id": "view-in-github",
        "colab_type": "text"
      },
      "source": [
        "<a href=\"https://colab.research.google.com/github/manan-arya/Building-Chatbots/blob/master/trying\" target=\"_parent\"><img src=\"https://colab.research.google.com/assets/colab-badge.svg\" alt=\"Open In Colab\"/></a>"
      ]
    },
    {
      "metadata": {
        "colab_type": "text",
        "id": "aZM1MslSF6d9"
      },
      "cell_type": "markdown",
      "source": [
        "\n",
        "## Rasa NLU & Rasa Core Tutorial - Building Chatbots\n",
        "\n"
      ]
    },
    {
      "metadata": {
        "id": "0n9FKLfgDc3h",
        "colab_type": "code",
        "colab": {}
      },
      "cell_type": "code",
      "source": [
        ""
      ],
      "execution_count": 0,
      "outputs": []
    },
    {
      "metadata": {
        "id": "y7Pwvr3VcmS3",
        "colab_type": "code",
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 206
        },
        "outputId": "94e15fe8-7238-406b-f0f4-25003a4781a1"
      },
      "cell_type": "code",
      "source": [
        "!pip install tzlocal==1.5.1"
      ],
      "execution_count": 2,
      "outputs": [
        {
          "output_type": "stream",
          "text": [
            "Collecting tzlocal==1.5.1\n",
            "  Downloading https://files.pythonhosted.org/packages/cb/89/e3687d3ed99bc882793f82634e9824e62499fdfdc4b1ae39e211c5b05017/tzlocal-1.5.1.tar.gz\n",
            "Requirement already satisfied: pytz in /usr/local/lib/python3.6/dist-packages (from tzlocal==1.5.1) (2018.9)\n",
            "Building wheels for collected packages: tzlocal\n",
            "  Running setup.py bdist_wheel for tzlocal ... \u001b[?25l-\b \bdone\n",
            "\u001b[?25h  Stored in directory: /root/.cache/pip/wheels/15/ae/df/a67bf1ed84e9bf230187d36d8dcfd30072bea0236cb059ed91\n",
            "Successfully built tzlocal\n",
            "Installing collected packages: tzlocal\n",
            "Successfully installed tzlocal-1.5.1\n"
          ],
          "name": "stdout"
        }
      ]
    },
    {
      "metadata": {
        "colab_type": "text",
        "id": "MK7Wgv_BF6eD"
      },
      "cell_type": "markdown",
      "source": [
        "### Rasa NLU & Rasa Core Tutorials\n",
        "+ Tabula rasa - blank slate\n",
        "+ Natural Language Understanding tool for understanding what is being said in short pieces of text\n",
        "+ \n",
        "#### Main Idea\n",
        "+ Intent Classification ===> rasa_nlu\n",
        "+ Entity Extraction ===> rasa_nlu\n",
        "+ Dialogue and Actions ===> rasa_core\n",
        "\n",
        "#### Installing\n",
        "- pip install tzlocal==1.5.1\n",
        "- pip install rasa_core\n",
        "\n",
        "#### Adding Backend for NLU\n",
        "- pip install rasa_nlu[spacy]\n",
        "\n",
        "+ install a language model for the language you need\n",
        "- python -m spacy download en_core_web_md\n",
        "- python -m spacy link en_core_web_md en\n",
        "\n",
        "\n",
        "#### Adding Graphiz for Visualization\n",
        "apt-get -qq install -y graphviz libgraphviz-dev pkg-config && pip install pygraphviz\n",
        "\n",
        "#### Easy way Run on Google Colab \n",
        "- Python 3.6 and up"
      ]
    },
    {
      "metadata": {
        "colab_type": "text",
        "id": "bw1CLUzVF6eH"
      },
      "cell_type": "markdown",
      "source": [
        "#### CLI Format\n",
        "###### Training and Building the Model\n",
        "    - python -m rasa_nlu.train -c nlu_config.yml --data data/nlu_data.md -o models --fixed_model_name nlu --project current --verbose\n",
        "###### Training the dialogue model\n",
        "    - python -m rasa_core.train -d domain.yml -s data/stories.md -o models/current/dialogue --epochs 200\n",
        "###### Runing our bots\n",
        "    - python -m rasa_core.run -d models/current/dialogue -u models/current/nlu"
      ]
    },
    {
      "metadata": {
        "colab_type": "raw",
        "id": "rWIFeyUuF6eK"
      },
      "cell_type": "markdown",
      "source": [
        "# Outline\n",
        "Installation\n",
        "Writing Stories\n",
        "Defining a Domain\n",
        "Training your Dialogue Model\n",
        "Starting up the bot\n",
        "Talking to the bot (no NLU)\n",
        "Part 2: Add natural language understanding\n",
        "Installing NLU\n",
        "Language Understanding\n",
        "Train the Rasa NLU Model\n",
        "Starting up the bot (with NLU)\n",
        "Talking to the Bot (with NLU)\n",
        "Pro Tip: Visualising the Training Data"
      ]
    },
    {
      "metadata": {
        "colab_type": "text",
        "id": "ElG01XSPF6eN"
      },
      "cell_type": "markdown",
      "source": [
        "#### Practice on the Colab\n",
        "https://colab.research.google.com/github/RasaHQ/rasa_core/blob/master/getting_started.ipynb"
      ]
    },
    {
      "metadata": {
        "colab_type": "code",
        "id": "Gzxg_W-bF6eR",
        "outputId": "5f66ca41-4cd1-4668-8698-c48d5b01b158",
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 3465
        }
      },
      "cell_type": "code",
      "source": [
        "# Installation\n",
        "!pip install rasa_core==0.10.0;\n",
        "\n",
        "import logging, io, json, warnings\n",
        "logging.basicConfig(level=\"INFO\")\n",
        "warnings.filterwarnings('ignore')"
      ],
      "execution_count": 4,
      "outputs": [
        {
          "output_type": "stream",
          "text": [
            "Collecting rasa_core==0.10.0\n",
            "\u001b[?25l  Downloading https://files.pythonhosted.org/packages/72/38/1c4126262ca2ffd05fbff7b1b65a0dd517b26e31abc47aee0b6f5bb7e65e/rasa_core-0.10.0-py2.py3-none-any.whl (132kB)\n",
            "\r\u001b[K    7% |██▌                             | 10kB 22.8MB/s eta 0:00:01\r\u001b[K    15% |█████                           | 20kB 1.8MB/s eta 0:00:01\r\u001b[K    23% |███████▍                        | 30kB 2.7MB/s eta 0:00:01\r\u001b[K    30% |██████████                      | 40kB 1.7MB/s eta 0:00:01\r\u001b[K    38% |████████████▍                   | 51kB 2.2MB/s eta 0:00:01\r\u001b[K    46% |██████████████▉                 | 61kB 2.6MB/s eta 0:00:01\r\u001b[K    54% |█████████████████▎              | 71kB 3.0MB/s eta 0:00:01\r\u001b[K    61% |███████████████████▉            | 81kB 3.4MB/s eta 0:00:01\r\u001b[K    69% |██████████████████████▎         | 92kB 3.8MB/s eta 0:00:01\r\u001b[K    77% |████████████████████████▊       | 102kB 2.9MB/s eta 0:00:01\r\u001b[K    85% |███████████████████████████▎    | 112kB 2.9MB/s eta 0:00:01\r\u001b[K    92% |█████████████████████████████▊  | 122kB 4.1MB/s eta 0:00:01\r\u001b[K    100% |████████████████████████████████| 133kB 3.8MB/s \n",
            "\u001b[?25hCollecting typing~=3.0 (from rasa_core==0.10.0)\n",
            "  Downloading https://files.pythonhosted.org/packages/4a/bd/eee1157fc2d8514970b345d69cb9975dcd1e42cd7e61146ed841f6e68309/typing-3.6.6-py3-none-any.whl\n",
            "Collecting tensorflow<1.9,>=1.7 (from rasa_core==0.10.0)\n",
            "\u001b[?25l  Downloading https://files.pythonhosted.org/packages/22/c6/d08f7c549330c2acc1b18b5c1f0f8d9d2af92f54d56861f331f372731671/tensorflow-1.8.0-cp36-cp36m-manylinux1_x86_64.whl (49.1MB)\n",
            "\u001b[K    100% |████████████████████████████████| 49.1MB 996kB/s \n",
            "\u001b[?25hCollecting apscheduler~=3.0 (from rasa_core==0.10.0)\n",
            "\u001b[?25l  Downloading https://files.pythonhosted.org/packages/97/3a/fa3213cc325091b7729616594611fff31d72c2d4d590418c3efdf7424ae2/APScheduler-3.5.3-py2.py3-none-any.whl (57kB)\n",
            "\u001b[K    100% |████████████████████████████████| 61kB 24.1MB/s \n",
            "\u001b[?25hCollecting redis~=2.0 (from rasa_core==0.10.0)\n",
            "\u001b[?25l  Downloading https://files.pythonhosted.org/packages/3b/f6/7a76333cf0b9251ecf49efff635015171843d9b977e4ffcf59f9c4428052/redis-2.10.6-py2.py3-none-any.whl (64kB)\n",
            "\u001b[K    100% |████████████████████████████████| 71kB 22.4MB/s \n",
            "\u001b[?25hCollecting fbmessenger~=5.0 (from rasa_core==0.10.0)\n",
            "  Downloading https://files.pythonhosted.org/packages/1d/c2/3f74cbd68fcbb9680c4bf6434f3c08c9d90a0ddd1e94b954db7382264ef7/fbmessenger-5.3.2-py2.py3-none-any.whl\n",
            "Collecting flask-cors~=3.0 (from rasa_core==0.10.0)\n",
            "  Downloading https://files.pythonhosted.org/packages/65/cb/683f71ff8daa3aea0a5cbb276074de39f9ab66d3fbb8ad5efb5bb83e90d2/Flask_Cors-3.0.7-py2.py3-none-any.whl\n",
            "Collecting colorhash~=1.0 (from rasa_core==0.10.0)\n",
            "  Downloading https://files.pythonhosted.org/packages/0e/e1/50dbc513aa74e99eca4c47f2a8206711f0bec436fdddd95eebaf7eaaa1aa/colorhash-1.0.2-py2.py3-none-any.whl\n",
            "Requirement already satisfied: numpy~=1.13 in /usr/local/lib/python3.6/dist-packages (from rasa_core==0.10.0) (1.14.6)\n",
            "Collecting mattermostwrapper~=2.0 (from rasa_core==0.10.0)\n",
            "  Downloading https://files.pythonhosted.org/packages/93/70/203660597d12788e958dd691aa11c3c29caa075eadb2ce94d2eb53099d1b/mattermostwrapper-2.1-py2.py3-none-any.whl\n",
            "Collecting python-telegram-bot~=10.0 (from rasa_core==0.10.0)\n",
            "\u001b[?25l  Downloading https://files.pythonhosted.org/packages/f1/51/d1bd383522c12b313eddd7b97b8e7d6cd2a8e3b44b8ff3c88e4a7b045cc8/python_telegram_bot-10.1.0-py2.py3-none-any.whl (298kB)\n",
            "\u001b[K    100% |████████████████████████████████| 307kB 16.8MB/s \n",
            "\u001b[?25hRequirement already satisfied: tqdm~=4.0 in /usr/local/lib/python3.6/dist-packages (from rasa_core==0.10.0) (4.28.1)\n",
            "Collecting jsonpickle~=0.9.0 (from rasa_core==0.10.0)\n",
            "\u001b[?25l  Downloading https://files.pythonhosted.org/packages/32/d5/2f47f03d3f64c31b0d7070b488274631d7567c36e81a9f744e6638bb0f0d/jsonpickle-0.9.6.tar.gz (67kB)\n",
            "\u001b[K    100% |████████████████████████████████| 71kB 23.8MB/s \n",
            "\u001b[?25hCollecting fakeredis~=0.10.0 (from rasa_core==0.10.0)\n",
            "  Downloading https://files.pythonhosted.org/packages/64/bd/2756ddf350c4bb308e3255f9dcd6610f8b01344947bf74d5d166dc66b0a2/fakeredis-0.10.3-py2.py3-none-any.whl\n",
            "Collecting pykwalify<=1.6.0 (from rasa_core==0.10.0)\n",
            "  Downloading https://files.pythonhosted.org/packages/6e/59/55c32d59b462a9c3fae2ab25f179f91d61617c0215e9f8ba3f4966b2b8b1/pykwalify-1.6.0-py2.py3-none-any.whl\n",
            "Requirement already satisfied: keras~=2.0 in /usr/local/lib/python3.6/dist-packages (from rasa_core==0.10.0) (2.2.4)\n",
            "Collecting rasa-nlu~=0.12.0 (from rasa_core==0.10.0)\n",
            "\u001b[?25l  Downloading https://files.pythonhosted.org/packages/e7/24/9dacfae4525ea885c1d908878296ad705512eb6f72a95a51fbd728ea6fa8/rasa_nlu-0.12.3-py2.py3-none-any.whl (131kB)\n",
            "\u001b[K    100% |████████████████████████████████| 133kB 31.2MB/s \n",
            "\u001b[?25hRequirement already satisfied: networkx~=2.0 in /usr/local/lib/python3.6/dist-packages (from rasa_core==0.10.0) (2.2)\n",
            "Requirement already satisfied: future~=0.16 in /usr/local/lib/python3.6/dist-packages (from rasa_core==0.10.0) (0.16.0)\n",
            "Requirement already satisfied: h5py~=2.0 in /usr/local/lib/python3.6/dist-packages (from rasa_core==0.10.0) (2.8.0)\n",
            "Collecting scikit-learn~=0.19.0 (from rasa_core==0.10.0)\n",
            "\u001b[?25l  Downloading https://files.pythonhosted.org/packages/f9/c8/8db4108aba5e2166cd2ea4eafa1a4b82f89240a1fa85733029cc2358ad1f/scikit_learn-0.19.2-cp36-cp36m-manylinux1_x86_64.whl (4.9MB)\n",
            "\u001b[K    100% |████████████████████████████████| 4.9MB 6.3MB/s \n",
            "\u001b[?25hRequirement already satisfied: six~=1.0 in /usr/local/lib/python3.6/dist-packages (from rasa_core==0.10.0) (1.11.0)\n",
            "Collecting twilio~=6.0 (from rasa_core==0.10.0)\n",
            "\u001b[?25l  Downloading https://files.pythonhosted.org/packages/a7/80/a6c07e32cc8bef9d2190c284704de77ef0b8acda58e021cbb7b0d8843cb4/twilio-6.23.1-py2.py3-none-any.whl (935kB)\n",
            "\u001b[K    100% |████████████████████████████████| 942kB 15.5MB/s \n",
            "\u001b[?25hRequirement already satisfied: requests~=2.15 in /usr/local/lib/python3.6/dist-packages (from rasa_core==0.10.0) (2.18.4)\n",
            "Collecting ConfigArgParse~=0.13.0 (from rasa_core==0.10.0)\n",
            "  Downloading https://files.pythonhosted.org/packages/77/61/ae928ce6ab85d4479ea198488cf5ffa371bd4ece2030c0ee85ff668deac5/ConfigArgParse-0.13.0.tar.gz\n",
            "Collecting graphviz~=0.8.0 (from rasa_core==0.10.0)\n",
            "  Downloading https://files.pythonhosted.org/packages/53/39/4ab213673844e0c004bed8a0781a0721a3f6bb23eb8854ee75c236428892/graphviz-0.8.4-py2.py3-none-any.whl\n",
            "Collecting ruamel.yaml~=0.15.0 (from rasa_core==0.10.0)\n",
            "\u001b[?25l  Downloading https://files.pythonhosted.org/packages/6d/8d/29dc08b1709f1de1c4e4e564f626481c4a17fe2dda781722cb6380ac8e31/ruamel.yaml-0.15.86-cp36-cp36m-manylinux1_x86_64.whl (664kB)\n",
            "\u001b[K    100% |████████████████████████████████| 665kB 19.1MB/s \n",
            "\u001b[?25hCollecting coloredlogs~=10.0 (from rasa_core==0.10.0)\n",
            "\u001b[?25l  Downloading https://files.pythonhosted.org/packages/08/0f/7877fc42fff0b9d70b6442df62d53b3868d3a6ad1b876bdb54335b30ff23/coloredlogs-10.0-py2.py3-none-any.whl (47kB)\n",
            "\u001b[K    100% |████████████████████████████████| 51kB 19.9MB/s \n",
            "\u001b[?25hCollecting slackclient~=1.0 (from rasa_core==0.10.0)\n",
            "  Downloading https://files.pythonhosted.org/packages/0d/2f/1378e64a843a5a8a83d73caa59ac88c36c67e2b41ac0fab3422080ff13bd/slackclient-1.3.0-py2.py3-none-any.whl\n",
            "Requirement already satisfied: flask~=1.0 in /usr/local/lib/python3.6/dist-packages (from rasa_core==0.10.0) (1.0.2)\n",
            "Requirement already satisfied: termcolor>=1.1.0 in /usr/local/lib/python3.6/dist-packages (from tensorflow<1.9,>=1.7->rasa_core==0.10.0) (1.1.0)\n",
            "Requirement already satisfied: gast>=0.2.0 in /usr/local/lib/python3.6/dist-packages (from tensorflow<1.9,>=1.7->rasa_core==0.10.0) (0.2.2)\n",
            "Requirement already satisfied: protobuf>=3.4.0 in /usr/local/lib/python3.6/dist-packages (from tensorflow<1.9,>=1.7->rasa_core==0.10.0) (3.6.1)\n",
            "Requirement already satisfied: absl-py>=0.1.6 in /usr/local/lib/python3.6/dist-packages (from tensorflow<1.9,>=1.7->rasa_core==0.10.0) (0.6.1)\n",
            "Requirement already satisfied: astor>=0.6.0 in /usr/local/lib/python3.6/dist-packages (from tensorflow<1.9,>=1.7->rasa_core==0.10.0) (0.7.1)\n",
            "Collecting tensorboard<1.9.0,>=1.8.0 (from tensorflow<1.9,>=1.7->rasa_core==0.10.0)\n",
            "\u001b[?25l  Downloading https://files.pythonhosted.org/packages/59/a6/0ae6092b7542cfedba6b2a1c9b8dceaf278238c39484f3ba03b03f07803c/tensorboard-1.8.0-py3-none-any.whl (3.1MB)\n",
            "\u001b[K    100% |████████████████████████████████| 3.1MB 11.5MB/s \n",
            "\u001b[?25hRequirement already satisfied: wheel>=0.26 in /usr/local/lib/python3.6/dist-packages (from tensorflow<1.9,>=1.7->rasa_core==0.10.0) (0.32.3)\n",
            "Requirement already satisfied: grpcio>=1.8.6 in /usr/local/lib/python3.6/dist-packages (from tensorflow<1.9,>=1.7->rasa_core==0.10.0) (1.15.0)\n",
            "Requirement already satisfied: tzlocal>=1.2 in /usr/local/lib/python3.6/dist-packages (from apscheduler~=3.0->rasa_core==0.10.0) (1.5.1)\n",
            "Requirement already satisfied: pytz in /usr/local/lib/python3.6/dist-packages (from apscheduler~=3.0->rasa_core==0.10.0) (2018.9)\n",
            "Requirement already satisfied: setuptools>=0.7 in /usr/local/lib/python3.6/dist-packages (from apscheduler~=3.0->rasa_core==0.10.0) (40.6.3)\n",
            "Requirement already satisfied: certifi in /usr/local/lib/python3.6/dist-packages (from python-telegram-bot~=10.0->rasa_core==0.10.0) (2018.11.29)\n",
            "Requirement already satisfied: PyYAML>=3.11 in /usr/local/lib/python3.6/dist-packages (from pykwalify<=1.6.0->rasa_core==0.10.0) (3.13)\n",
            "Requirement already satisfied: python-dateutil>=2.4.2 in /usr/local/lib/python3.6/dist-packages (from pykwalify<=1.6.0->rasa_core==0.10.0) (2.5.3)\n",
            "Requirement already satisfied: docopt>=0.6.2 in /usr/local/lib/python3.6/dist-packages (from pykwalify<=1.6.0->rasa_core==0.10.0) (0.6.2)\n",
            "Requirement already satisfied: keras-applications>=1.0.6 in /usr/local/lib/python3.6/dist-packages (from keras~=2.0->rasa_core==0.10.0) (1.0.6)\n",
            "Requirement already satisfied: scipy>=0.14 in /usr/local/lib/python3.6/dist-packages (from keras~=2.0->rasa_core==0.10.0) (1.1.0)\n",
            "Requirement already satisfied: keras-preprocessing>=1.0.5 in /usr/local/lib/python3.6/dist-packages (from keras~=2.0->rasa_core==0.10.0) (1.0.5)\n",
            "Requirement already satisfied: gevent in /usr/local/lib/python3.6/dist-packages (from rasa-nlu~=0.12.0->rasa_core==0.10.0) (1.4.0)\n",
            "Requirement already satisfied: jsonschema in /usr/local/lib/python3.6/dist-packages (from rasa-nlu~=0.12.0->rasa_core==0.10.0) (2.6.0)\n",
            "Requirement already satisfied: cloudpickle in /usr/local/lib/python3.6/dist-packages (from rasa-nlu~=0.12.0->rasa_core==0.10.0) (0.6.1)\n",
            "Requirement already satisfied: matplotlib in /usr/local/lib/python3.6/dist-packages (from rasa-nlu~=0.12.0->rasa_core==0.10.0) (3.0.2)\n",
            "Requirement already satisfied: boto3 in /usr/local/lib/python3.6/dist-packages (from rasa-nlu~=0.12.0->rasa_core==0.10.0) (1.9.78)\n",
            "Requirement already satisfied: packaging in /usr/local/lib/python3.6/dist-packages (from rasa-nlu~=0.12.0->rasa_core==0.10.0) (18.0)\n",
            "Collecting simplejson (from rasa-nlu~=0.12.0->rasa_core==0.10.0)\n",
            "\u001b[?25l  Downloading https://files.pythonhosted.org/packages/e3/24/c35fb1c1c315fc0fffe61ea00d3f88e85469004713dab488dee4f35b0aff/simplejson-3.16.0.tar.gz (81kB)\n",
            "\u001b[K    100% |████████████████████████████████| 81kB 27.3MB/s \n",
            "\u001b[?25hRequirement already satisfied: pathlib in /usr/local/lib/python3.6/dist-packages (from rasa-nlu~=0.12.0->rasa_core==0.10.0) (1.0.1)\n",
            "Collecting klein (from rasa-nlu~=0.12.0->rasa_core==0.10.0)\n",
            "  Downloading https://files.pythonhosted.org/packages/8a/6b/adc97a7bb3fb781fdd9e49177ad873c1479f87b9745271cbeda81cbb9cc8/klein-17.10.0-py2.py3-none-any.whl\n",
            "Requirement already satisfied: decorator>=4.3.0 in /usr/local/lib/python3.6/dist-packages (from networkx~=2.0->rasa_core==0.10.0) (4.3.0)\n",
            "Requirement already satisfied: pysocks; python_version >= \"3.0\" in /usr/local/lib/python3.6/dist-packages (from twilio~=6.0->rasa_core==0.10.0) (1.6.8)\n",
            "Collecting PyJWT>=1.4.2 (from twilio~=6.0->rasa_core==0.10.0)\n",
            "  Downloading https://files.pythonhosted.org/packages/87/8b/6a9f14b5f781697e51259d81657e6048fd31a113229cf346880bb7545565/PyJWT-1.7.1-py2.py3-none-any.whl\n",
            "Requirement already satisfied: idna<2.7,>=2.5 in /usr/local/lib/python3.6/dist-packages (from requests~=2.15->rasa_core==0.10.0) (2.6)\n",
            "Requirement already satisfied: urllib3<1.23,>=1.21.1 in /usr/local/lib/python3.6/dist-packages (from requests~=2.15->rasa_core==0.10.0) (1.22)\n",
            "Requirement already satisfied: chardet<3.1.0,>=3.0.2 in /usr/local/lib/python3.6/dist-packages (from requests~=2.15->rasa_core==0.10.0) (3.0.4)\n",
            "Collecting humanfriendly>=4.7 (from coloredlogs~=10.0->rasa_core==0.10.0)\n",
            "\u001b[?25l  Downloading https://files.pythonhosted.org/packages/79/1e/13d96248e3fcaa7777b61fa889feab44865c85e524bbd667acfa0d8b66e3/humanfriendly-4.17-py2.py3-none-any.whl (72kB)\n",
            "\u001b[K    100% |████████████████████████████████| 81kB 26.0MB/s \n",
            "\u001b[?25hCollecting websocket-client<1.0a0,>=0.35 (from slackclient~=1.0->rasa_core==0.10.0)\n",
            "\u001b[?25l  Downloading https://files.pythonhosted.org/packages/26/2d/f749a5c82f6192d77ed061a38e02001afcba55fe8477336d26a950ab17ce/websocket_client-0.54.0-py2.py3-none-any.whl (200kB)\n",
            "\u001b[K    100% |████████████████████████████████| 204kB 29.9MB/s \n",
            "\u001b[?25hRequirement already satisfied: itsdangerous>=0.24 in /usr/local/lib/python3.6/dist-packages (from flask~=1.0->rasa_core==0.10.0) (1.1.0)\n",
            "Requirement already satisfied: click>=5.1 in /usr/local/lib/python3.6/dist-packages (from flask~=1.0->rasa_core==0.10.0) (7.0)\n",
            "Requirement already satisfied: Werkzeug>=0.14 in /usr/local/lib/python3.6/dist-packages (from flask~=1.0->rasa_core==0.10.0) (0.14.1)\n",
            "Requirement already satisfied: Jinja2>=2.10 in /usr/local/lib/python3.6/dist-packages (from flask~=1.0->rasa_core==0.10.0) (2.10)\n",
            "Requirement already satisfied: markdown>=2.6.8 in /usr/local/lib/python3.6/dist-packages (from tensorboard<1.9.0,>=1.8.0->tensorflow<1.9,>=1.7->rasa_core==0.10.0) (3.0.1)\n",
            "Collecting html5lib==0.9999999 (from tensorboard<1.9.0,>=1.8.0->tensorflow<1.9,>=1.7->rasa_core==0.10.0)\n",
            "\u001b[?25l  Downloading https://files.pythonhosted.org/packages/ae/ae/bcb60402c60932b32dfaf19bb53870b29eda2cd17551ba5639219fb5ebf9/html5lib-0.9999999.tar.gz (889kB)\n",
            "\u001b[K    100% |████████████████████████████████| 890kB 13.0MB/s \n",
            "\u001b[?25hCollecting bleach==1.5.0 (from tensorboard<1.9.0,>=1.8.0->tensorflow<1.9,>=1.7->rasa_core==0.10.0)\n",
            "  Downloading https://files.pythonhosted.org/packages/33/70/86c5fec937ea4964184d4d6c4f0b9551564f821e1c3575907639036d9b90/bleach-1.5.0-py2.py3-none-any.whl\n",
            "Requirement already satisfied: greenlet>=0.4.14; platform_python_implementation == \"CPython\" in /usr/local/lib/python3.6/dist-packages (from gevent->rasa-nlu~=0.12.0->rasa_core==0.10.0) (0.4.15)\n",
            "Requirement already satisfied: pyparsing!=2.0.4,!=2.1.2,!=2.1.6,>=2.0.1 in /usr/local/lib/python3.6/dist-packages (from matplotlib->rasa-nlu~=0.12.0->rasa_core==0.10.0) (2.3.1)\n",
            "Requirement already satisfied: kiwisolver>=1.0.1 in /usr/local/lib/python3.6/dist-packages (from matplotlib->rasa-nlu~=0.12.0->rasa_core==0.10.0) (1.0.1)\n",
            "Requirement already satisfied: cycler>=0.10 in /usr/local/lib/python3.6/dist-packages (from matplotlib->rasa-nlu~=0.12.0->rasa_core==0.10.0) (0.10.0)\n",
            "Requirement already satisfied: jmespath<1.0.0,>=0.7.1 in /usr/local/lib/python3.6/dist-packages (from boto3->rasa-nlu~=0.12.0->rasa_core==0.10.0) (0.9.3)\n",
            "Requirement already satisfied: s3transfer<0.2.0,>=0.1.10 in /usr/local/lib/python3.6/dist-packages (from boto3->rasa-nlu~=0.12.0->rasa_core==0.10.0) (0.1.13)\n",
            "Requirement already satisfied: botocore<1.13.0,>=1.12.78 in /usr/local/lib/python3.6/dist-packages (from boto3->rasa-nlu~=0.12.0->rasa_core==0.10.0) (1.12.78)\n",
            "Collecting incremental (from klein->rasa-nlu~=0.12.0->rasa_core==0.10.0)\n",
            "  Downloading https://files.pythonhosted.org/packages/f5/1d/c98a587dc06e107115cf4a58b49de20b19222c83d75335a192052af4c4b7/incremental-17.5.0-py2.py3-none-any.whl\n",
            "Collecting Twisted>=15.5 (from klein->rasa-nlu~=0.12.0->rasa_core==0.10.0)\n",
            "\u001b[?25l  Downloading https://files.pythonhosted.org/packages/5d/0e/a72d85a55761c2c3ff1cb968143a2fd5f360220779ed90e0fadf4106d4f2/Twisted-18.9.0.tar.bz2 (3.1MB)\n",
            "\u001b[K    100% |████████████████████████████████| 3.1MB 11.4MB/s \n",
            "\u001b[?25hRequirement already satisfied: MarkupSafe>=0.23 in /usr/local/lib/python3.6/dist-packages (from Jinja2>=2.10->flask~=1.0->rasa_core==0.10.0) (1.1.0)\n",
            "Requirement already satisfied: docutils>=0.10 in /usr/local/lib/python3.6/dist-packages (from botocore<1.13.0,>=1.12.78->boto3->rasa-nlu~=0.12.0->rasa_core==0.10.0) (0.14)\n",
            "Collecting zope.interface>=4.4.2 (from Twisted>=15.5->klein->rasa-nlu~=0.12.0->rasa_core==0.10.0)\n",
            "\u001b[?25l  Downloading https://files.pythonhosted.org/packages/19/17/1d198a6aaa9aa4590862fe3d3a2ed7dd808050cab4eebe8a2f2f813c1376/zope.interface-4.6.0-cp36-cp36m-manylinux1_x86_64.whl (167kB)\n",
            "\u001b[K    100% |████████████████████████████████| 174kB 29.5MB/s \n",
            "\u001b[?25hCollecting constantly>=15.1 (from Twisted>=15.5->klein->rasa-nlu~=0.12.0->rasa_core==0.10.0)\n",
            "  Downloading https://files.pythonhosted.org/packages/b9/65/48c1909d0c0aeae6c10213340ce682db01b48ea900a7d9fce7a7910ff318/constantly-15.1.0-py2.py3-none-any.whl\n",
            "Collecting Automat>=0.3.0 (from Twisted>=15.5->klein->rasa-nlu~=0.12.0->rasa_core==0.10.0)\n",
            "  Downloading https://files.pythonhosted.org/packages/a3/86/14c16bb98a5a3542ed8fed5d74fb064a902de3bdd98d6584b34553353c45/Automat-0.7.0-py2.py3-none-any.whl\n",
            "Collecting hyperlink>=17.1.1 (from Twisted>=15.5->klein->rasa-nlu~=0.12.0->rasa_core==0.10.0)\n",
            "  Downloading https://files.pythonhosted.org/packages/a7/b6/84d0c863ff81e8e7de87cff3bd8fd8f1054c227ce09af1b679a8b17a9274/hyperlink-18.0.0-py2.py3-none-any.whl\n",
            "Collecting PyHamcrest>=1.9.0 (from Twisted>=15.5->klein->rasa-nlu~=0.12.0->rasa_core==0.10.0)\n",
            "\u001b[?25l  Downloading https://files.pythonhosted.org/packages/9a/d5/d37fd731b7d0e91afcc84577edeccf4638b4f9b82f5ffe2f8b62e2ddc609/PyHamcrest-1.9.0-py2.py3-none-any.whl (52kB)\n",
            "\u001b[K    100% |████████████████████████████████| 61kB 24.1MB/s \n",
            "\u001b[?25hRequirement already satisfied: attrs>=17.4.0 in /usr/local/lib/python3.6/dist-packages (from Twisted>=15.5->klein->rasa-nlu~=0.12.0->rasa_core==0.10.0) (18.2.0)\n",
            "Building wheels for collected packages: jsonpickle, ConfigArgParse, simplejson, html5lib, Twisted\n",
            "  Running setup.py bdist_wheel for jsonpickle ... \u001b[?25l-\b \bdone\n",
            "\u001b[?25h  Stored in directory: /root/.cache/pip/wheels/07/8b/41/8ce98f4737a9ff61b1bf2673f2abfe66a6a43ad6e91d2c9736\n",
            "  Running setup.py bdist_wheel for ConfigArgParse ... \u001b[?25l-\b \bdone\n",
            "\u001b[?25h  Stored in directory: /root/.cache/pip/wheels/76/11/eb/12113becd46c0e8a70b8a63f9405e46a1f61d4aaa8532d676b\n",
            "  Running setup.py bdist_wheel for simplejson ... \u001b[?25l-\b \b\\\b \b|\b \bdone\n",
            "\u001b[?25h  Stored in directory: /root/.cache/pip/wheels/5d/1a/1e/0350bb3df3e74215cd91325344cc86c2c691f5306eb4d22c77\n",
            "  Running setup.py bdist_wheel for html5lib ... \u001b[?25l-\b \b\\\b \bdone\n",
            "\u001b[?25h  Stored in directory: /root/.cache/pip/wheels/50/ae/f9/d2b189788efcf61d1ee0e36045476735c838898eef1cad6e29\n",
            "  Running setup.py bdist_wheel for Twisted ... \u001b[?25l-\b \b\\\b \b|\b \b/\b \b-\b \b\\\b \b|\b \b/\b \b-\b \b\\\b \b|\b \b/\b \b-\b \bdone\n",
            "\u001b[?25h  Stored in directory: /root/.cache/pip/wheels/57/2e/89/11ba83bc08ac30a5e3a6005f0310c78d231b96a270def88ca0\n",
            "Successfully built jsonpickle ConfigArgParse simplejson html5lib Twisted\n",
            "\u001b[31myellowbrick 0.9 has requirement matplotlib<3.0,>=1.5.1, but you'll have matplotlib 3.0.2 which is incompatible.\u001b[0m\n",
            "\u001b[31myellowbrick 0.9 has requirement scikit-learn>=0.20, but you'll have scikit-learn 0.19.2 which is incompatible.\u001b[0m\n",
            "\u001b[31mmagenta 0.3.19 has requirement tensorflow>=1.12.0, but you'll have tensorflow 1.8.0 which is incompatible.\u001b[0m\n",
            "\u001b[31mimbalanced-learn 0.4.3 has requirement scikit-learn>=0.20, but you'll have scikit-learn 0.19.2 which is incompatible.\u001b[0m\n",
            "Installing collected packages: typing, html5lib, bleach, tensorboard, tensorflow, apscheduler, redis, fbmessenger, flask-cors, colorhash, mattermostwrapper, python-telegram-bot, jsonpickle, fakeredis, pykwalify, simplejson, incremental, zope.interface, constantly, Automat, hyperlink, PyHamcrest, Twisted, klein, rasa-nlu, scikit-learn, PyJWT, twilio, ConfigArgParse, graphviz, ruamel.yaml, humanfriendly, coloredlogs, websocket-client, slackclient, rasa-core\n",
            "  Found existing installation: html5lib 1.0.1\n",
            "    Uninstalling html5lib-1.0.1:\n",
            "      Successfully uninstalled html5lib-1.0.1\n",
            "  Found existing installation: bleach 3.1.0\n",
            "    Uninstalling bleach-3.1.0:\n",
            "      Successfully uninstalled bleach-3.1.0\n",
            "  Found existing installation: tensorboard 1.12.2\n",
            "    Uninstalling tensorboard-1.12.2:\n",
            "      Successfully uninstalled tensorboard-1.12.2\n",
            "  Found existing installation: tensorflow 1.12.0\n",
            "    Uninstalling tensorflow-1.12.0:\n",
            "      Successfully uninstalled tensorflow-1.12.0\n",
            "  Found existing installation: scikit-learn 0.20.2\n",
            "    Uninstalling scikit-learn-0.20.2:\n",
            "      Successfully uninstalled scikit-learn-0.20.2\n",
            "  Found existing installation: graphviz 0.10.1\n",
            "    Uninstalling graphviz-0.10.1:\n",
            "      Successfully uninstalled graphviz-0.10.1\n",
            "Successfully installed Automat-0.7.0 ConfigArgParse-0.13.0 PyHamcrest-1.9.0 PyJWT-1.7.1 Twisted-18.9.0 apscheduler-3.5.3 bleach-1.5.0 coloredlogs-10.0 colorhash-1.0.2 constantly-15.1.0 fakeredis-0.10.3 fbmessenger-5.3.2 flask-cors-3.0.7 graphviz-0.8.4 html5lib-0.9999999 humanfriendly-4.17 hyperlink-18.0.0 incremental-17.5.0 jsonpickle-0.9.6 klein-17.10.0 mattermostwrapper-2.1 pykwalify-1.6.0 python-telegram-bot-10.1.0 rasa-core-0.10.0 rasa-nlu-0.12.3 redis-2.10.6 ruamel.yaml-0.15.86 scikit-learn-0.19.2 simplejson-3.16.0 slackclient-1.3.0 tensorboard-1.8.0 tensorflow-1.8.0 twilio-6.23.1 typing-3.6.6 websocket-client-0.54.0 zope.interface-4.6.0\n",
            "\u001b[0;31;1mWARNING: The following packages were previously imported in this runtime:\n",
            "  [typing]\n",
            "You must restart the runtime in order to use newly installed versions.\u001b[0m\n"
          ],
          "name": "stdout"
        }
      ]
    },
    {
      "metadata": {
        "colab_type": "text",
        "id": "UcwLUYwkF6ef"
      },
      "cell_type": "markdown",
      "source": [
        "#### Writing A Story\n"
      ]
    },
    {
      "metadata": {
        "colab_type": "raw",
        "id": "OEi_j1WNF6ei"
      },
      "cell_type": "markdown",
      "source": [
        "### Story Structure\n",
        "  - starts stories ==> ##\n",
        "  -  intent/entities of the message you are sending ==> *\n",
        "  -  actions that the bot will do or take eg utter_greet,utter_location,API_function \n",
        "      with dash  -"
      ]
    },
    {
      "metadata": {
        "colab_type": "code",
        "id": "uSablWyQF6e7",
        "outputId": "d06cf817-b199-4534-df1d-e21f61402d98",
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 36
        }
      },
      "cell_type": "code",
      "source": [
        "stories_md = \"\"\"\n",
        "## happy path               <!-- name of the story - just for debugging -->\n",
        "* greet              \n",
        "  - utter_greet\n",
        "* mood_great               <!-- user utterance, in format intent[entities] -->\n",
        "  - utter_happy\n",
        "* mood_affirm\n",
        "  - utter_happy\n",
        "* mood_affirm\n",
        "  - utter_goodbye\n",
        "  \n",
        "  \n",
        "## sad path 1               <!-- this is already the start of the next story -->\n",
        "* greet\n",
        "  - utter_greet             <!-- action the bot should execute -->\n",
        "* mood_unhappy\n",
        "  - utter_cheer_up\n",
        "  - utter_did_that_help\n",
        "* mood_affirm\n",
        "  - utter_happy\n",
        "\n",
        "## good purchase path               <!-- name of the story - for making purchase-->\n",
        "* greet              \n",
        "  - utter_greet\n",
        "* mood_great               <!-- user utterance, in format intent[entities] -->\n",
        "  - utter_happy\n",
        "* mood_affirm\n",
        "  - utter_happy\n",
        "* purchase                  <! -- user intention to purchase things --->\n",
        "  - utter_purchase  \n",
        "* purchase_affirm           <!-- user utterance, in format intent[entities] -->\n",
        "  - utter_purchase\n",
        "* purchase_affirm\n",
        "  - utter_price\n",
        "* mood_affirm\n",
        "  - utter_goodbye\n",
        "  \n",
        "## good purchase path2\n",
        "* greet              \n",
        "  - utter_greet\n",
        "* inform                    <!-- user utterance, in format intent[entities] -->\n",
        "  - utter_ask_item\n",
        "  - utter_show_item\n",
        "  - utter_did_that_help\n",
        "* goodbye\n",
        "    - utter_goodbye\n",
        "\n",
        "## no purchase path               <!-- name of the story - for making purchase-->\n",
        "* greet              \n",
        "  - utter_greet\n",
        "* mood_great               <!-- user utterance, in format intent[entities] -->\n",
        "  - utter_happy\n",
        "* mood_affirm\n",
        "  - utter_happy\n",
        "* purchase                  <! -- user intention to purchase things --->\n",
        "  - utter_purchase  \n",
        "* purchase_deny           <!-- user utterance, in format intent[entities] -->\n",
        "  - utter_purchase\n",
        "* purchase_deny\n",
        "  - utter_ask_item\n",
        "* mood_affirm\n",
        "  - utter_goodbye\n",
        "  \n",
        "  \n",
        "## get weather of location\n",
        "* greet\n",
        "  - utter_greet\n",
        "* mood_great               <!-- user utterance, in format intent[entities] -->\n",
        "  - utter_happy\n",
        "* inform\n",
        "  - utter_ask_location\n",
        "* inform{\"location\": \"Paris\"}\n",
        "  - utter_ask_location\n",
        "* goodbye\n",
        "    - utter_goodbye\n",
        "    - export\n",
        "    \n",
        "## get weather of location\n",
        "* greet\n",
        "    - utter_greet\n",
        "* inform[location=London]\n",
        "    - utter_ask_location\n",
        "* goodbye\n",
        "    - utter_goodbye\n",
        "    - export\n",
        "  \n",
        "  \n",
        "## strange user\n",
        "* mood_affirm\n",
        "  - utter_happy\n",
        "* mood_affirm\n",
        "  - utter_unclear\n",
        "\n",
        "## say goodbye\n",
        "* goodbye\n",
        "  - utter_goodbye\n",
        "\n",
        "\"\"\"\n",
        "\n",
        "%store stories_md > my_stories.md"
      ],
      "execution_count": 5,
      "outputs": [
        {
          "output_type": "stream",
          "text": [
            "Writing 'stories_md' (str) to file 'my_stories.md'.\n"
          ],
          "name": "stdout"
        }
      ]
    },
    {
      "metadata": {
        "colab_type": "text",
        "id": "iwHO536tF6fF"
      },
      "cell_type": "markdown",
      "source": [
        "### Defining the Domain Universe/Environment\n",
        "+ Where(universe or environment) your bot lives\n",
        " - - intents : what you expect users to say,their intentions\n",
        " - - action : what your bot is supposed to do(list them eg utter_greet,custom actions)\n",
        " - - template :\n",
        "\n",
        "+ Stories"
      ]
    },
    {
      "metadata": {
        "colab_type": "text",
        "id": "F3coRFkjF6fI"
      },
      "cell_type": "markdown",
      "source": [
        ""
      ]
    },
    {
      "metadata": {
        "colab_type": "code",
        "id": "mYfTB5o_F6fZ",
        "outputId": "3fba378a-9793-4fea-a337-898b674b4057",
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 36
        }
      },
      "cell_type": "code",
      "source": [
        "domain_yml = \"\"\"\n",
        "intents:\n",
        "  - greet\n",
        "  - goodbye\n",
        "  - mood_affirm\n",
        "  - mood_deny\n",
        "  - mood_great\n",
        "  - mood_unhappy\n",
        "  - purchase\n",
        "  - purchase_affirm\n",
        "  - purchase_deny\n",
        "  - inform\n",
        "  - weather\n",
        "  \n",
        "entities:\n",
        " - location\n",
        " - money\n",
        " \n",
        "slots:\n",
        " location:\n",
        "   type: text\n",
        "\n",
        "\n",
        "actions:\n",
        "- utter_greet\n",
        "- utter_cheer_up\n",
        "- utter_purchase\n",
        "- utter_price\n",
        "- utter_did_that_help\n",
        "- utter_ask_item\n",
        "- utter_show_item\n",
        "- utter_happy\n",
        "- utter_goodbye\n",
        "- utter_unclear\n",
        "- utter_ask_location\n",
        "\n",
        "templates:\n",
        "  utter_greet:\n",
        "  - text: \"Hey! How are you?\"\n",
        "  - text: \"Hi How are you?\"\n",
        "  - text: \"What's up\"\n",
        "  - text: \"Bonjour\"\n",
        "\n",
        "  utter_cheer_up:\n",
        "  - text: \"Stay motivated,all is well\"\n",
        "  - text: \"Here is something to make you happy\"\n",
        "  - text: \"Here is something to cheer you up:\"\n",
        "    image: \"https://i.imgur.com/nGF1K8f.jpg\"\n",
        "\n",
        "  utter_did_that_help:\n",
        "  - text: \"Did that help you?\"\n",
        "\n",
        "  utter_unclear:\n",
        "  - text: \"I am not sure what you are aiming for.\"\n",
        "  - text: \"How do you mean? Can you clarify \"\n",
        "  - text: \"Not quite sure what you want. \"\n",
        "  \n",
        "  utter_happy:\n",
        "  - text: \"Great carry on!\" \n",
        "  \n",
        "  utter_purchase:\n",
        "  - text: 'What item do you want to buy?'\n",
        "  - text: 'Here are some recommended products'\n",
        "  - text: 'You want to buy this?'\n",
        "  - text: 'We only have this?'\n",
        "  - text: 'Can you give me the specs ?'\n",
        "  \n",
        "  utter_ask_item:\n",
        "  - text: 'What item do you want to buy?'\n",
        "  - text: 'How many do you want to buy?'\n",
        "  - text: 'Which type?'\n",
        "\n",
        "  utter_show_item:\n",
        "  - text: \"Here are some suggestions.\"\n",
        "  - text: \"Check this one out.\"\n",
        "  - text: \"We only have this product\"\n",
        "  - text: \"Sending sample picture\"\n",
        "    \n",
        "  utter_price:\n",
        "  - text: \"It will cost you this much\"\n",
        "  - text: \"The price is 100\"\n",
        "  - text: \"You will pay\"\n",
        "  - text: \"Here is the bill\"\n",
        "  - text: \"The total cost is 2000, you can pay with your credit card.\"\n",
        "\n",
        "  utter_ask_location:\n",
        "  - text:'In what location?'\n",
        "  - text:'In which place?'\n",
        "  - text:'Where precisely?'\n",
        "\n",
        "  utter_goodbye:\n",
        "  - text: \"Bye\"\n",
        "  - text: \"Talk to you later\"\n",
        "  - text: \"Cu\"\n",
        "  - text: \"Aurevoir\"\n",
        "  - text: \"A bientot \"\n",
        "  - text: \"goodbye\"\n",
        "  - text: \"have a nice day\"\n",
        "  - text: \"see you around\"\n",
        "  - text: \"bye bye\"\n",
        "  - text: \"See you later\"\n",
        "  \n",
        "\"\"\"\n",
        "\n",
        "%store domain_yml > my_domain.yml"
      ],
      "execution_count": 6,
      "outputs": [
        {
          "output_type": "stream",
          "text": [
            "Writing 'domain_yml' (str) to file 'my_domain.yml'.\n"
          ],
          "name": "stdout"
        }
      ]
    },
    {
      "metadata": {
        "colab_type": "text",
        "id": "y2qiCMqGF6fi"
      },
      "cell_type": "markdown",
      "source": [
        "#### Training your Dialogue Model\n",
        "+ rasa_core\n",
        "+ Using Keras\n",
        "+ Install keras + tensorflow backend"
      ]
    },
    {
      "metadata": {
        "colab_type": "code",
        "id": "ebQxJxrfF6fm",
        "outputId": "80ff3978-cd7f-4c74-d6f6-29ff7ccf04fe",
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 36
        }
      },
      "cell_type": "code",
      "source": [
        "# Load the packages without using fallbackpolicy\n",
        "from rasa_core.policies.keras_policy import KerasPolicy\n",
        "from rasa_core.agent import Agent"
      ],
      "execution_count": 7,
      "outputs": [
        {
          "output_type": "stream",
          "text": [
            "INFO:apscheduler.scheduler:Scheduler started\n"
          ],
          "name": "stderr"
        }
      ]
    },
    {
      "metadata": {
        "id": "iSfNhy58EY5V",
        "colab_type": "code",
        "colab": {}
      },
      "cell_type": "code",
      "source": [
        ""
      ],
      "execution_count": 0,
      "outputs": []
    },
    {
      "metadata": {
        "colab_type": "code",
        "id": "GwPaZvlBF6gA",
        "outputId": "34e770de-1cea-43f3-f85e-182700881100",
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 195
        }
      },
      "cell_type": "code",
      "source": [
        "# Set the Agent\n",
        "#agent = Agent('my_domain.yml', policies=[KerasPolicy()])\n",
        "agent = Agent('my_domain.yml', policies=[KerasPolicy(epochs = 500, validation_split = 0.0)])"
      ],
      "execution_count": 29,
      "outputs": [
        {
          "output_type": "error",
          "ename": "TypeError",
          "evalue": "ignored",
          "traceback": [
            "\u001b[0;31m---------------------------------------------------------------------------\u001b[0m",
            "\u001b[0;31mTypeError\u001b[0m                                 Traceback (most recent call last)",
            "\u001b[0;32m<ipython-input-29-69d9d6e6fb00>\u001b[0m in \u001b[0;36m<module>\u001b[0;34m()\u001b[0m\n\u001b[0;32m----> 1\u001b[0;31m \u001b[0magent\u001b[0m \u001b[0;34m=\u001b[0m \u001b[0mAgent\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0;34m'my_domain.yml'\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0mpolicies\u001b[0m\u001b[0;34m=\u001b[0m\u001b[0;34m[\u001b[0m\u001b[0mKerasPolicy\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mepoch\u001b[0m \u001b[0;34m=\u001b[0m \u001b[0;36m500\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0mvalidation_split\u001b[0m \u001b[0;34m=\u001b[0m \u001b[0;36m0.0\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m]\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0m",
            "\u001b[0;31mTypeError\u001b[0m: __init__() got an unexpected keyword argument 'epoch'"
          ]
        }
      ]
    },
    {
      "metadata": {
        "colab_type": "code",
        "id": "B_4t29zjF6gJ",
        "outputId": "95ba9a8a-f1d2-4e8c-e798-1a0cebcbba5d",
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 281
        }
      },
      "cell_type": "code",
      "source": [
        "# loading our neatly defined training dialogues\n",
        "training_data = agent.load_data('my_stories.md')\n",
        "agent.train(\n",
        "        training_data,\n",
        "    \n",
        ")"
      ],
      "execution_count": 27,
      "outputs": [
        {
          "output_type": "stream",
          "text": [
            "WARNING:rasa_core.training.dsl:Found unknown intent 'purchase                  <! -- user intention to purchase things --->' on line 29. Please, make sure that all intents are listed in your domain yaml.\n",
            "WARNING:rasa_core.training.dsl:Found unknown intent 'purchase                  <! -- user intention to purchase things --->' on line 55. Please, make sure that all intents are listed in your domain yaml.\n",
            "Processed Story Blocks: 100%|██████████| 9/9 [00:00<00:00, 303.52it/s, # trackers=1]\n",
            "Processed Story Blocks: 100%|██████████| 9/9 [00:00<00:00, 203.71it/s, # trackers=9]\n",
            "Processed Story Blocks: 100%|██████████| 9/9 [00:00<00:00, 173.28it/s, # trackers=13]\n",
            "Processed Story Blocks: 100%|██████████| 9/9 [00:00<00:00, 140.80it/s, # trackers=14]\n",
            "INFO:rasa_core.featurizers:Creating states and action examples from collected trackers (by MaxHistoryTrackerFeaturizer)...\n",
            "Processed trackers: 100%|██████████| 301/301 [00:19<00:00, 15.46it/s, # actions=255]\n",
            "INFO:rasa_core.featurizers:Created 255 action examples.\n",
            "INFO:rasa_core.policies.keras_policy:Fitting model with 255 total samples and a validation split of 0.0\n"
          ],
          "name": "stderr"
        },
        {
          "output_type": "stream",
          "text": [
            "Epoch 1/1\n",
            "255/255 [==============================] - 0s 553us/step - loss: 2.3640 - acc: 0.4431\n"
          ],
          "name": "stdout"
        },
        {
          "output_type": "stream",
          "text": [
            "INFO:rasa_core.policies.keras_policy:Done fitting keras policy model\n"
          ],
          "name": "stderr"
        }
      ]
    },
    {
      "metadata": {
        "colab_type": "code",
        "id": "UiDCDaUWF6gS",
        "outputId": "9b2279ff-03de-433f-939a-09462c23a9f9",
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 720
        }
      },
      "cell_type": "code",
      "source": [
        "# Saving Our Dialogue Models\n",
        "agent.persist('models/dialogue')"
      ],
      "execution_count": 24,
      "outputs": [
        {
          "output_type": "error",
          "ename": "TypeError",
          "evalue": "ignored",
          "traceback": [
            "\u001b[0;31m---------------------------------------------------------------------------\u001b[0m",
            "\u001b[0;31mTypeError\u001b[0m                                 Traceback (most recent call last)",
            "\u001b[0;32m<ipython-input-24-0dbedfbb3c57>\u001b[0m in \u001b[0;36m<module>\u001b[0;34m()\u001b[0m\n\u001b[0;32m----> 1\u001b[0;31m \u001b[0magent\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mpersist\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0;34m'models/dialogue'\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0m",
            "\u001b[0;32m/usr/local/lib/python3.6/dist-packages/rasa_core/agent.py\u001b[0m in \u001b[0;36mpersist\u001b[0;34m(self, model_path, dump_flattened_stories)\u001b[0m\n\u001b[1;32m    335\u001b[0m         \u001b[0mself\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0m_clear_model_directory\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mmodel_path\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m    336\u001b[0m \u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0;32m--> 337\u001b[0;31m         \u001b[0mself\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mpolicy_ensemble\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mpersist\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mmodel_path\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0mdump_flattened_stories\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0m\u001b[1;32m    338\u001b[0m         \u001b[0mself\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mdomain\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mpersist\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mos\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mpath\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mjoin\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mmodel_path\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0;34m\"domain.yml\"\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m    339\u001b[0m         \u001b[0mself\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mdomain\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mpersist_specification\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mmodel_path\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n",
            "\u001b[0;32m/usr/local/lib/python3.6/dist-packages/rasa_core/policies/ensemble.py\u001b[0m in \u001b[0;36mpersist\u001b[0;34m(self, path, dump_flattened_stories)\u001b[0m\n\u001b[1;32m    156\u001b[0m         \u001b[0;34m\"\"\"Persists the policy to storage.\"\"\"\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m    157\u001b[0m \u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0;32m--> 158\u001b[0;31m         \u001b[0mself\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0m_persist_metadata\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mpath\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0mdump_flattened_stories\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0m\u001b[1;32m    159\u001b[0m \u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m    160\u001b[0m         \u001b[0;32mfor\u001b[0m \u001b[0mi\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0mpolicy\u001b[0m \u001b[0;32min\u001b[0m \u001b[0menumerate\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mself\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mpolicies\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m:\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n",
            "\u001b[0;32m/usr/local/lib/python3.6/dist-packages/rasa_core/policies/ensemble.py\u001b[0m in \u001b[0;36m_persist_metadata\u001b[0;34m(self, path, dump_flattened_stories)\u001b[0m\n\u001b[1;32m    133\u001b[0m \u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m    134\u001b[0m         training_events = self._training_events_from_trackers(\n\u001b[0;32m--> 135\u001b[0;31m                 self.training_trackers)\n\u001b[0m\u001b[1;32m    136\u001b[0m \u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m    137\u001b[0m         \u001b[0maction_fingerprints\u001b[0m \u001b[0;34m=\u001b[0m \u001b[0mself\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0m_create_action_fingerprints\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mtraining_events\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n",
            "\u001b[0;32m/usr/local/lib/python3.6/dist-packages/rasa_core/policies/ensemble.py\u001b[0m in \u001b[0;36m_training_events_from_trackers\u001b[0;34m(training_trackers)\u001b[0m\n\u001b[1;32m     56\u001b[0m         \u001b[0mevents_metadata\u001b[0m \u001b[0;34m=\u001b[0m \u001b[0mdefaultdict\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mset\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m     57\u001b[0m \u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0;32m---> 58\u001b[0;31m         \u001b[0;32mfor\u001b[0m \u001b[0mt\u001b[0m \u001b[0;32min\u001b[0m \u001b[0mtraining_trackers\u001b[0m\u001b[0;34m:\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0m\u001b[1;32m     59\u001b[0m             \u001b[0mtracker\u001b[0m \u001b[0;34m=\u001b[0m \u001b[0mt\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0minit_copy\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m     60\u001b[0m             \u001b[0;32mfor\u001b[0m \u001b[0mevent\u001b[0m \u001b[0;32min\u001b[0m \u001b[0mt\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mevents\u001b[0m\u001b[0;34m:\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n",
            "\u001b[0;31mTypeError\u001b[0m: 'NoneType' object is not iterable"
          ]
        }
      ]
    },
    {
      "metadata": {
        "colab_type": "text",
        "id": "VTfe-USzF6gd"
      },
      "cell_type": "markdown",
      "source": [
        "#### Starting up the bot\n",
        "+ rasa_core\n",
        "+ agent\n",
        "+ dialogue model"
      ]
    },
    {
      "metadata": {
        "colab_type": "text",
        "id": "yqo8B7eLF6gh"
      },
      "cell_type": "markdown",
      "source": [
        "The default 'Loader' for 'load(stream)' without further arguments can be unsafe.\n",
        "Use 'load(stream, Loader=ruamel.yaml.Loader)' explicitly if that is OK.\n",
        "Alternatively include the following in your code:\n",
        "\n",
        "  import warnings\n",
        "  warnings.simplefilter('ignore', ruamel.yaml.error.UnsafeLoaderWarning)\n",
        "\n",
        "In most other cases you should consider using 'safe_load(stream)'\n",
        "  data = yaml.load(stream)"
      ]
    },
    {
      "metadata": {
        "id": "ZV6RqWT8e5Qf",
        "colab_type": "code",
        "colab": {}
      },
      "cell_type": "code",
      "source": [
        "!pip install rasa-core==0.9.0a3"
      ],
      "execution_count": 0,
      "outputs": []
    },
    {
      "metadata": {
        "id": "D-_zAClPgfmL",
        "colab_type": "code",
        "colab": {}
      },
      "cell_type": "code",
      "source": [
        "!pip install pykwalify==1.6.0"
      ],
      "execution_count": 0,
      "outputs": []
    },
    {
      "metadata": {
        "colab_type": "code",
        "id": "LQukfMYbF6go",
        "colab": {}
      },
      "cell_type": "code",
      "source": [
        "# Load Dialogue model into agent\n",
        "from rasa_core.interpreter import NaturalLanguageInterpreter\n",
        "loader = Agent.load('models/dialogue')\n",
        "\n",
        "# With NLU Trained data\n",
        "#agent = Agent.load('models/dialogue', interpreter=model_directory)"
      ],
      "execution_count": 0,
      "outputs": []
    },
    {
      "metadata": {
        "colab_type": "text",
        "id": "DfDC_yweF6gz"
      },
      "cell_type": "markdown",
      "source": [
        "#### Practising or Talking to the bot"
      ]
    },
    {
      "metadata": {
        "colab_type": "code",
        "id": "KA069DoUF6g1",
        "outputId": "a0d9d70a-3b13-4eb9-f88c-d176eb658766",
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 288
        }
      },
      "cell_type": "code",
      "source": [
        "print(\"Your bot is ready to talk! Type your messages here or send 'stop'\")\n",
        "while True:\n",
        "    a = input()\n",
        "    if a == 'stop':\n",
        "        break\n",
        "    responses = agent.handle_text(a)\n",
        "    for response in responses:\n",
        "        print(response[\"text\"])"
      ],
      "execution_count": 19,
      "outputs": [
        {
          "output_type": "stream",
          "text": [
            "Your bot is ready to talk! Type your messages here or send 'stop'\n",
            "Hello\n"
          ],
          "name": "stdout"
        },
        {
          "output_type": "error",
          "ename": "AttributeError",
          "evalue": "ignored",
          "traceback": [
            "\u001b[0;31m---------------------------------------------------------------------------\u001b[0m",
            "\u001b[0;31mAttributeError\u001b[0m                            Traceback (most recent call last)",
            "\u001b[0;32m<ipython-input-19-f7f3629e973a>\u001b[0m in \u001b[0;36m<module>\u001b[0;34m()\u001b[0m\n\u001b[1;32m      4\u001b[0m     \u001b[0;32mif\u001b[0m \u001b[0ma\u001b[0m \u001b[0;34m==\u001b[0m \u001b[0;34m'stop'\u001b[0m\u001b[0;34m:\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m      5\u001b[0m         \u001b[0;32mbreak\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0;32m----> 6\u001b[0;31m     \u001b[0mresponses\u001b[0m \u001b[0;34m=\u001b[0m \u001b[0magent\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mhandle_text\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0ma\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0m\u001b[1;32m      7\u001b[0m     \u001b[0;32mfor\u001b[0m \u001b[0mresponse\u001b[0m \u001b[0;32min\u001b[0m \u001b[0mresponses\u001b[0m\u001b[0;34m:\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m      8\u001b[0m         \u001b[0mprint\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mresponse\u001b[0m\u001b[0;34m[\u001b[0m\u001b[0;34m\"text\"\u001b[0m\u001b[0;34m]\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n",
            "\u001b[0;31mAttributeError\u001b[0m: 'Agent' object has no attribute 'handle_text'"
          ]
        }
      ]
    },
    {
      "metadata": {
        "colab_type": "code",
        "id": "NzYIVuiCF6hD",
        "colab": {}
      },
      "cell_type": "code",
      "source": [
        "## Training Our Bot with Rasa NLU"
      ],
      "execution_count": 0,
      "outputs": []
    },
    {
      "metadata": {
        "colab_type": "text",
        "id": "Yh5P7F0KVJRA"
      },
      "cell_type": "markdown",
      "source": [
        "### Natural Language Understanding and Intent Classification"
      ]
    },
    {
      "metadata": {
        "colab_type": "code",
        "id": "TqIzBPiAF6hX",
        "colab": {}
      },
      "cell_type": "code",
      "source": [
        "# Loading our Packages\n",
        "from rasa_nlu.training_data import load_data\n",
        "from rasa_nlu.config import RasaNLUModelConfig\n",
        "from rasa_nlu.model import Trainer\n",
        "from rasa_nlu import config"
      ],
      "execution_count": 0,
      "outputs": []
    },
    {
      "metadata": {
        "colab_type": "text",
        "id": "KqmTJM-oF6hj"
      },
      "cell_type": "markdown",
      "source": [
        "#### How our dataset can look like\n",
        "+ Describes what the messages mean/intention\n",
        "+ json\n",
        "+ md\n",
        "+ yml\n",
        "\n",
        "\n"
      ]
    },
    {
      "metadata": {
        "colab_type": "code",
        "id": "v58M_OHtF6hl",
        "colab": {}
      },
      "cell_type": "code",
      "source": [
        "## intent:intentname\n",
        "- examples\n",
        "- examples"
      ],
      "execution_count": 0,
      "outputs": []
    },
    {
      "metadata": {
        "colab_type": "code",
        "id": "y1DRzLbjF6hv",
        "colab": {}
      },
      "cell_type": "code",
      "source": [
        "# Data Set\n",
        "nludataset_md = \"\"\"\n",
        "## intent:greet\n",
        "- hey\n",
        "- hello\n",
        "- hi\n",
        "- hello there\n",
        "- good morning\n",
        "- good evening\n",
        "- moin\n",
        "- hey there\n",
        "- let's go\n",
        "- hey dude\n",
        "- goodmorning\n",
        "- goodevening\n",
        "- good afternoon\n",
        "\n",
        "## intent:goodbye\n",
        "- cu\n",
        "- good by\n",
        "- cee you later\n",
        "- good night\n",
        "- good afternoon\n",
        "- bye\n",
        "- goodbye\n",
        "- have a nice day\n",
        "- see you around\n",
        "- bye bye\n",
        "- see you later\n",
        "\n",
        "## intent:mood_affirm\n",
        "- yes\n",
        "- indeed\n",
        "- of course\n",
        "- that sounds good\n",
        "- correct\n",
        "\n",
        "## intent:mood_deny\n",
        "- no\n",
        "- never\n",
        "- I don't think so\n",
        "- don't like that\n",
        "- no way\n",
        "- not really\n",
        "\n",
        "## intent:mood_great\n",
        "- perfect\n",
        "- very good\n",
        "- great\n",
        "- amazing\n",
        "- feeling like a king\n",
        "- wonderful\n",
        "- I am feeling very good\n",
        "- I am great\n",
        "- I am amazing\n",
        "- I am going to save the world\n",
        "- super\n",
        "- extremely good\n",
        "- so so perfect\n",
        "- so good\n",
        "- so perfect\n",
        "\n",
        "## intent:mood_unhappy\n",
        "- my day was horrible\n",
        "- I am sad\n",
        "- I don't feel very well\n",
        "- I am disappointed\n",
        "- super sad\n",
        "- I'm so sad\n",
        "- sad\n",
        "- very sad\n",
        "- unhappy\n",
        "- bad\n",
        "- very bad\n",
        "- awful\n",
        "- terrible\n",
        "- not so good\n",
        "- not very good\n",
        "- extremly sad\n",
        "- so saad\n",
        "- so sad\n",
        "\n",
        "## intent:purchase\n",
        "- I need to buy IPhone\n",
        "- I want to purchase some items\n",
        "- What product is that?\n",
        "- You need this watch.\n",
        "- How much that it cost?\n",
        "- He bought this house for $2000\n",
        "- She is selling it\n",
        "- I need to buy another\n",
        "- Can you make a request for the product\n",
        "- How much?\n",
        "- This is so expensive\n",
        "- It was very cheap\n",
        "- He is buying \n",
        "- You ordered for this\n",
        "- buy\n",
        "- sell\n",
        "- pay\n",
        "- purchase\n",
        "- what is the price\n",
        "- Tell me the price\n",
        "- Show me the product\n",
        "\n",
        "## intent:purchase_affirm\n",
        "- yes\n",
        "- yes I need to buy it\n",
        "- indeed I want to buy\n",
        "- of course\n",
        "- that sounds good\n",
        "- correct\n",
        "- I will take it\n",
        "\n",
        "## intent:purchase_deny\n",
        "- no I don't want it\n",
        "- never\n",
        "- I don't think so\n",
        "- don't like that\n",
        "- no way \n",
        "- not really\n",
        "- no\n",
        "\n",
        "\n",
        "## intent:inform\n",
        "- I need to buy IPhone\n",
        "- I want to purchase some items\n",
        "- What product is that?\n",
        "\n",
        "## intent:weather\n",
        "- I wonder what is the weather in Vilnius right now?\n",
        "- what is the weather?\n",
        "- Tell me the weather\n",
        "- Is the weather nice in Barcelona today\n",
        "- I am going to London today and I wonder what is the weather out there?\n",
        "- Show me the weather in Dublin, please\n",
        "- Tell me the weather in Vilnius\n",
        "\n",
        "\"\"\"\n",
        "\n",
        "%store nludataset_md > nludataset.md"
      ],
      "execution_count": 0,
      "outputs": []
    },
    {
      "metadata": {
        "colab_type": "code",
        "id": "m6fYa0OVF6h4",
        "colab": {}
      },
      "cell_type": "code",
      "source": [
        "# Loading Dataset\n",
        "# Dataset can be in json or md\n",
        "training_data = load_data('nludataset.md')\n"
      ],
      "execution_count": 0,
      "outputs": []
    },
    {
      "metadata": {
        "colab_type": "code",
        "id": "Jr-qIsiNQSMj",
        "colab": {}
      },
      "cell_type": "code",
      "source": [
        "!apt-get -qq install -y graphviz libgraphviz-dev pkg-config && pip install pygraphviz;\n",
        "!pip install rasa_nlu[spacy];\n",
        "!python -m spacy download en;"
      ],
      "execution_count": 0,
      "outputs": []
    },
    {
      "metadata": {
        "colab_type": "text",
        "id": "LdXJz2B9F6iE"
      },
      "cell_type": "markdown",
      "source": [
        "#### Configuration File\n",
        "+ spacy as backend\n",
        "+ mitie as backend"
      ]
    },
    {
      "metadata": {
        "colab_type": "code",
        "id": "3R6czQE9QnQI",
        "colab": {}
      },
      "cell_type": "code",
      "source": [
        "# Load the Rasa_nlu Packages\n",
        "from rasa_nlu.training_data import load_data\n",
        "from rasa_nlu.config import RasaNLUModelConfig\n",
        "from rasa_nlu.model import Trainer\n",
        "\n"
      ],
      "execution_count": 0,
      "outputs": []
    },
    {
      "metadata": {
        "colab_type": "text",
        "id": "jcHwRmtUQ5sp"
      },
      "cell_type": "markdown",
      "source": [
        "#### Load and Configure our Backend with spaCy"
      ]
    },
    {
      "metadata": {
        "colab_type": "code",
        "id": "LwXkaztYQxxS",
        "colab": {}
      },
      "cell_type": "code",
      "source": [
        "\n",
        "training_data = load_data('nludataset.md')\n",
        "pipeline = [{\"name\": \"nlp_spacy\"}, \n",
        "            {\"name\": \"tokenizer_spacy\"}, \n",
        "            {\"name\": \"intent_featurizer_spacy\"},  \n",
        "            {\"name\": \"intent_classifier_sklearn\"}]\n"
      ],
      "execution_count": 0,
      "outputs": []
    },
    {
      "metadata": {
        "colab_type": "code",
        "id": "ITmioUy1RUpT",
        "colab": {}
      },
      "cell_type": "code",
      "source": [
        "trainer = Trainer(RasaNLUModelConfig({\"pipeline\": pipeline}))\n",
        "interpreter = trainer.train(training_data)\n",
        "model_directory = trainer.persist('./projects/default/')"
      ],
      "execution_count": 0,
      "outputs": []
    },
    {
      "metadata": {
        "colab_type": "code",
        "id": "yJGIOPiuRc1O",
        "colab": {}
      },
      "cell_type": "code",
      "source": [
        "from rasa_core.agent import Agent\n",
        "agent = Agent.load('models/dialogue', interpreter=model_directory)"
      ],
      "execution_count": 0,
      "outputs": []
    },
    {
      "metadata": {
        "colab_type": "text",
        "id": "QMVilHYURpKo"
      },
      "cell_type": "markdown",
      "source": [
        " #### Lets Chat"
      ]
    },
    {
      "metadata": {
        "colab_type": "code",
        "id": "P_hQbAU6Rioi",
        "colab": {}
      },
      "cell_type": "code",
      "source": [
        "print(\"Your bot is ready to talk! Type your messages here or send 'stop'\")\n",
        "while True:\n",
        "    a = input()\n",
        "    if a == 'stop':\n",
        "        break\n",
        "    responses = agent.handle_message(a)\n",
        "    for response in responses:\n",
        "        print(response[\"text\"])"
      ],
      "execution_count": 0,
      "outputs": []
    },
    {
      "metadata": {
        "colab_type": "code",
        "id": "tido-1lBSo0E",
        "colab": {}
      },
      "cell_type": "code",
      "source": [
        "import platform\n",
        "platform.python_version()"
      ],
      "execution_count": 0,
      "outputs": []
    },
    {
      "metadata": {
        "colab_type": "text",
        "id": "BW4strAnF6lA"
      },
      "cell_type": "markdown",
      "source": [
        "## Intent Classification With Rasa_nlu"
      ]
    },
    {
      "metadata": {
        "colab_type": "code",
        "id": "cadIx3ohF6lD",
        "colab": {}
      },
      "cell_type": "code",
      "source": [
        "from rasa_nlu.training_data import load_data\n",
        "from rasa_nlu.config import RasaNLUModelConfig\n",
        "from rasa_nlu.model import Trainer\n",
        "from rasa_nlu import config"
      ],
      "execution_count": 0,
      "outputs": []
    },
    {
      "metadata": {
        "colab_type": "code",
        "id": "Tiir3YTtF6lJ",
        "colab": {}
      },
      "cell_type": "code",
      "source": [
        "# Loading our Dataset\n",
        "# Dataset can be in json,md\n",
        "training_data = load_data('nludataset.md')"
      ],
      "execution_count": 0,
      "outputs": []
    },
    {
      "metadata": {
        "colab_type": "code",
        "id": "Z3y7jRAnF6lS",
        "colab": {}
      },
      "cell_type": "code",
      "source": [
        "# Setting Up our Training Configuration with Spacy as Backend\n",
        "trainer = Trainer(config.load(\"config_spacy.yml\"))\n"
      ],
      "execution_count": 0,
      "outputs": []
    },
    {
      "metadata": {
        "colab_type": "code",
        "id": "9Ni1EEmfF6lr",
        "colab": {}
      },
      "cell_type": "code",
      "source": [
        "# Model Building\n",
        "model_directory = trainer.persist('./projects/default/')"
      ],
      "execution_count": 0,
      "outputs": []
    },
    {
      "metadata": {
        "colab_type": "code",
        "id": "9poIt5RKF6l5",
        "colab": {}
      },
      "cell_type": "code",
      "source": [
        "# Prediction\n",
        "from rasa_nlu.model import Metadata, Interpreter"
      ],
      "execution_count": 0,
      "outputs": []
    },
    {
      "metadata": {
        "colab_type": "code",
        "id": "80uOlY4wF6mK",
        "colab": {}
      },
      "cell_type": "code",
      "source": [
        "# where `model_directory points to the folder the model is persisted in\n",
        "interpreter = Interpreter.load(model_directory)"
      ],
      "execution_count": 0,
      "outputs": []
    },
    {
      "metadata": {
        "colab_type": "code",
        "id": "ZtAmTNtOF6mY",
        "colab": {}
      },
      "cell_type": "code",
      "source": [
        "# Predicting\n",
        "interpreter.parse(u\"I am looking for an African spot to eat\")"
      ],
      "execution_count": 0,
      "outputs": []
    },
    {
      "metadata": {
        "colab_type": "code",
        "id": "eKmVKYzVF6mw",
        "colab": {}
      },
      "cell_type": "code",
      "source": [
        "interpreter.parse(u\"Good morning everyone\")"
      ],
      "execution_count": 0,
      "outputs": []
    },
    {
      "metadata": {
        "colab_type": "text",
        "id": "5zKh63SlF6nG"
      },
      "cell_type": "markdown",
      "source": [
        "### Rasa GUI \n",
        "##### Online\n",
        "+ https://rasahq.github.io/rasa-nlu-trainer/\n",
        "##### Offline\n",
        "+ npm i -g rasa-nlu-trainer\n"
      ]
    },
    {
      "metadata": {
        "colab_type": "text",
        "id": "M5Hub6t-F6nJ"
      },
      "cell_type": "markdown",
      "source": [
        "#### Building your dataset\n",
        "+ rasa-nlu-trainer gui\n",
        " - - Requirement\n",
        "  - - - nodejs npm + browser(Chrome)\n",
        "  - - - - + npm install -g rasa-nlu-trainer\n",
        "  - - - fileformat in json\n",
        "+ DIY"
      ]
    },
    {
      "metadata": {
        "colab_type": "text",
        "id": "PD7MpPAUF6nL"
      },
      "cell_type": "markdown",
      "source": [
        "#### Basic Format of the Dataset.Json\n",
        "###### Most Basic Format \n",
        "{\n",
        "  \"rasa_nlu_data\": {}\n",
        "}\n",
        "\n",
        "\n",
        "#### Simple Format\n",
        "{\n",
        "  \"rasa_nlu_data\": {\n",
        "    \"common_examples\": []\n",
        "  }\n",
        "}"
      ]
    },
    {
      "metadata": {
        "colab_type": "text",
        "id": "0jyhb7w_F6nO"
      },
      "cell_type": "markdown",
      "source": [
        "#### Evaluating Model"
      ]
    },
    {
      "metadata": {
        "colab_type": "code",
        "id": "PqQsvURuF6nQ",
        "colab": {}
      },
      "cell_type": "code",
      "source": [
        "# Import from rasa_nlu\n",
        "from rasa_nlu.evaluate import run_evaluation\n",
        "\n",
        "run_evaluation(\"sampledatasetrasa.json\", model_directory)"
      ],
      "execution_count": 0,
      "outputs": []
    },
    {
      "metadata": {
        "colab_type": "code",
        "id": "dvIgCImqF6nc",
        "colab": {}
      },
      "cell_type": "code",
      "source": [
        ""
      ],
      "execution_count": 0,
      "outputs": []
    },
    {
      "metadata": {
        "colab_type": "text",
        "id": "rZsySIG-F6nt"
      },
      "cell_type": "markdown",
      "source": [
        "#### Adding Custom API functions"
      ]
    },
    {
      "metadata": {
        "colab_type": "code",
        "id": "J3ri0v-6F6nv",
        "colab": {}
      },
      "cell_type": "code",
      "source": [
        "from rasa_core.actions import Action\n",
        "from rasa_core.events import SlotSet\n",
        "\n",
        "import requests\n",
        "# from __future__ import absolute_import\n",
        "# from __future__ import division\n",
        "# from __future__ import unicode_literals\n",
        "\n",
        "class ApiAction(Action):\n",
        "    def name(self):\n",
        "        return \"action_retrieve_image\"\n",
        "\n",
        "    def run(self, dispatcher, tracker, domain):\n",
        "        dispatcher.utter_message(\"looking for a good img\")\n",
        "        url = \"https://picsum.photos/200/300/?random\"\n",
        "        return [SlotSet(\"img_api_response\", url)]\n",
        "    \n",
        "class ActionWeather(Action):\n",
        "    def name(self):\n",
        "        return 'action_weather'\n",
        "\n",
        "    def run(self, dispatcher, tracker, domain):\n",
        "        from apixu.client import ApixuClient\n",
        "        api_key = '...' #your apixu key\n",
        "        client = ApixuClient(api_key)\n",
        "        \n",
        "        loc = tracker.get_slot('location')\n",
        "        current = client.getCurrentWeather(q=loc)\n",
        "        \n",
        "        country = current['location']['country']\n",
        "        city = current['location']['name']\n",
        "        condition = current['current']['condition']['text']\n",
        "        temperature_c = current['current']['temp_c']\n",
        "        humidity = current['current']['humidity']\n",
        "        wind_mph = current['current']['wind_mph']\n",
        "\n",
        "        response = \"\"\"It is currently {} in {} at the moment. The temperature is {} degrees, the humidity is {}% and the wind speed is {} mph.\"\"\".format(condition, city, temperature_c, humidity, wind_mph)\n",
        "        dispatcher.utter_message(response)\n",
        "        return [SlotSet('location',loc)]\n"
      ],
      "execution_count": 0,
      "outputs": []
    },
    {
      "metadata": {
        "colab_type": "text",
        "id": "d-EhG6WaF6n3"
      },
      "cell_type": "markdown",
      "source": [
        "### Visualizing The Dialogue"
      ]
    },
    {
      "metadata": {
        "colab_type": "code",
        "id": "E_HSk8WJF6n6",
        "colab": {}
      },
      "cell_type": "code",
      "source": [
        "from rasa_core.agent import Agent\n",
        "from IPython.display import Image\n",
        "\n",
        "agent = Agent.load('models/dialogue')\n",
        "agent.visualize(\"stories.md\", \"story_graph.png\", max_history=2)\n",
        "Image(filename=\"story_graph.png\")"
      ],
      "execution_count": 0,
      "outputs": []
    },
    {
      "metadata": {
        "colab_type": "code",
        "id": "ucZueYRxYqh_",
        "colab": {}
      },
      "cell_type": "code",
      "source": [
        ""
      ],
      "execution_count": 0,
      "outputs": []
    },
    {
      "metadata": {
        "id": "GMyjAGlmRrcu",
        "colab_type": "code",
        "colab": {}
      },
      "cell_type": "code",
      "source": [
        "### Jesse JCharis\n",
        "# J-Security\n",
        "# Jesus Saves @JCharisTech"
      ],
      "execution_count": 0,
      "outputs": []
    }
  ]
}